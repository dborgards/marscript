{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.marscript",
	"name": "MarScript",
	"fileTypes": [
		"sbr",
		"mpr",
		"inc"
	],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#types"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#functionsWithArgs"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#macros"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.marscript",
					"match": "//.*$"
				},
				{
					"name": "comment.block.marscript",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.marscript",
					"match": "\\b(?:BEGIN|END|IF|ELSE|FOR|WHILE|REPEAT|RETURN|PROC|TRY|CATCH|THEN|PROGRAM|SWITCH)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.marscript",
					"match": "\\b(?:INT|DOUBLE|STRING)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "keyword.function.marscript",
					"match": "\\b(?:ABS|FLOOR|SQRT|PRINTF|STRLEN|FOPEN|FCLOSE|GET DATE|GET TIME|EXIT)\\b"
				}
			]
		},
		"functionsWithArgs": {
			"patterns": [
				{
					"name": "keyword.function.marscript",
					"match": "(?<!\\w)(?:\\t|\\s)*([a-zA-Z_]+(?:\\s+[a-zA-Z_]+)*)\\s*(?=\\()"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.marscript",
					"match": "==|!=|<=|>=|=|<|>|\\+|-|\\*|/|,|:|;"
				}
			]
		},
		"macros": {
			"patterns": [
				{
					"name": "keyword.preprocessor.marscript",
					"match": "^\\s*#(?:define|include|ifdef|ifndef|endif|else|elif|error|scramble|endscramble)"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.marscript",
					"begin": "\"",
					"end": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.marscript"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.marscript"
						}
					},
					"patterns": [
						{
							"match": "\\\\.",
							"name": "constant.character.escape.marscript"
						}
					]
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "keyword.other.assignment.marscript",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*=)"
				}
			]
		}
	}
}